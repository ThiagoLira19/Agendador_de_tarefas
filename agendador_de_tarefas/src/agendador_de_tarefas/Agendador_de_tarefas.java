/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package agendador_de_tarefas;

import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author Thiago
 */
public class Agendador_de_tarefas extends javax.swing.JFrame {

    /**
     * Creates new form Agendador_de_tarefas
     */
    public Agendador_de_tarefas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCaminhoArquivo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbxIntervaloFrequencia = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtInicioExecao = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtFimExecao = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnStart = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        cbxLigarMouseRobo = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        lbltempo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtaTerminalExecucao = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Abrir arquivo:");
        jLabel1.setToolTipText("Caminho do arquivo que será aberto ou executado na tarefa.");

        txtCaminhoArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCaminhoArquivoActionPerformed(evt);
            }
        });

        jLabel3.setText("Intervalo (Tempo):");
        jLabel3.setToolTipText("Intervalo em que se repetirá a tarefa. Ex: a cada 30 min.");

        cbxIntervaloFrequencia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10 min", "15 min", "30 min", "1 h", "2 h", "6 h", "12 h", "24 h" }));
        cbxIntervaloFrequencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxIntervaloFrequenciaActionPerformed(evt);
            }
        });

        jLabel2.setText("Intervalo de Exceção:");
        jLabel2.setToolTipText("Período em que a tarefa não será executada. Obs: Deixe em branco se for executar ininterruptamente.");

        txtInicioExecao.setText("00");
        txtInicioExecao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInicioExecaoActionPerformed(evt);
            }
        });

        jLabel4.setText("de");

        jLabel5.setText("hs, até");

        txtFimExecao.setText("05");

        jLabel7.setText("hs");

        btnStart.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnStop.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnStop.setText("Stop");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        cbxLigarMouseRobo.setText("Ligar Mouse robô");
        cbxLigarMouseRobo.setToolTipText("Ligar o mouse robô, movimenta automaticamente o mouse a cada 20 segundos.");
        cbxLigarMouseRobo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxLigarMouseRoboActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("AGENDADOR DE TAREFAS");

        lbltempo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbltempo.setText("  ");

        jScrollPane2.setViewportView(txtaTerminalExecucao);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSeparator1)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel1))
                            .addGap(23, 23, 23)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtCaminhoArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbxIntervaloFrequencia, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtInicioExecao, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtFimExecao, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel7))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbxLigarMouseRobo))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(101, 101, 101)
                            .addComponent(lbltempo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(8, 8, 8))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lbltempo))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCaminhoArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxIntervaloFrequencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtInicioExecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(txtFimExecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxLigarMouseRobo))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCaminhoArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCaminhoArquivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCaminhoArquivoActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        // TODO add your handling code here:
        timer.stop();
        proximaExecucao = "primeira";
    }//GEN-LAST:event_btnStopActionPerformed
    
    private void cbxLigarMouseRoboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxLigarMouseRoboActionPerformed
        // TODO add your handling code here:
        if(cbxLigarMouseRobo.isSelected()){
            threadRobo = new Thread(robo);
            if(threadRobo.getState()==Thread.State.TERMINATED){
                threadRobo = new Thread(robo);
                threadRobo.start();
            }else{
               threadRobo.start(); 
            }
        }else{
            threadRobo.stop();
        }
    }//GEN-LAST:event_cbxLigarMouseRoboActionPerformed

    private void txtInicioExecaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInicioExecaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInicioExecaoActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // TODO add your handling code here:
       
        timer.init();
        
    }//GEN-LAST:event_btnStartActionPerformed

    private void cbxIntervaloFrequenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxIntervaloFrequenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxIntervaloFrequenciaActionPerformed
    
    private void setTxtCaminhoArquivo(String caminho) {                                                       
        // TODO add your handling code here:
        txtCaminhoArquivo.setText(caminho);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Agendador_de_tarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Agendador_de_tarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Agendador_de_tarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Agendador_de_tarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Agendador_de_tarefas janela = new Agendador_de_tarefas();
                janela.setVisible(true);
                janela.setResizable(false);
                janela.setTitle("Agendador de Tarefas");
                janela.setLocationRelativeTo(null);
            }
        });
    }
    
    public class startObservador implements ActionListener{
    public Timer timer;
    
    
    int hora;
    int min;
    int seg;
    
    public startObservador(int delay) {
        hora = 0;
        min = 0;
        seg = 0;
    }
    
    public void init() {
        timer = new Timer(1000, this);
        timer.start();
        
    }
    
    public void stop() {
        timer.stop();
        
        lbltempo.setText("");
    }
    
    public void actionPerformed(final ActionEvent e) {
        seg++;
        if(seg==60){
            min++;
            seg=0;
        }
        if(min==60){
            hora++;
            min=0;
        }
        lbltempo.setText(hora+":"+min+":"+seg);
        
        String texto = executarTarefa();
        
        if(!texto.equals("")){
            txtaTerminalExecucao.setText(txtaTerminalExecucao.getText()+texto);        
        }
    }
    
    public String executarTarefa(){
        
        if(proximaExecucao.equals("primeira") || proximaExecucao.equals(getDataAtual())){
        
            String arquivo = txtCaminhoArquivo.getText();
            String intervalo = cbxIntervaloFrequencia.getSelectedItem().toString();
            String inicioExcecao = txtInicioExecao.getText();
            String fimExcecao = txtFimExecao.getText();
                
            try {
                Desktop.getDesktop().open(new java.io.File(arquivo));
                //Runtime.getRuntime().exec("cmd /c \""+arquivo+"\"");
            } catch (IOException ex) {
                Logger.getLogger(Agendador_de_tarefas.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            proximaExecucao = getDataAgendada(intervalo);
            
            return "Tarefa executada com sucesso em "+getDataAtual()+"\nPróxima execução prevista para "+proximaExecucao+"\n\n";
        
        }else{
            
            return "";
            
        }
    }
    
    }
    
    public String getDataAgendada(String tempo){
        GregorianCalendar c = new GregorianCalendar();
        c.setTime(new Date());
        switch(tempo){
            case "10 min":
                c.add(Calendar.MINUTE,10);
            break;
            case "15 min":
                c.add(Calendar.MINUTE,15);
            break;
            case "30 min":
                c.add(Calendar.MINUTE,30);
            break;
            case "1 h":
                c.add(Calendar.MINUTE,60);
            break;
            case "2 h":
                c.add(Calendar.MINUTE,120);
            break;
            case "6 h":
                c.add(Calendar.MINUTE,360);
            break;
            case "12 h":
                c.add(Calendar.MINUTE,720);
            break;
            case "24 h":
                c.add(Calendar.MINUTE,1440);
            break;
        }
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        return sdf.format(c.getTime());
    }
    
    public String getDataAtual(){
        GregorianCalendar c = new GregorianCalendar();
        c.setTime(new Date());
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        
        return sdf.format(c.getTime());
    }
    
    Thread threadRobo;
    String proximaExecucao = "primeira";
    EuRobo robo = new EuRobo();
    final startObservador timer = new startObservador(1000);

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JComboBox<String> cbxIntervaloFrequencia;
    private javax.swing.JCheckBox cbxLigarMouseRobo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbltempo;
    private javax.swing.JTextField txtCaminhoArquivo;
    private javax.swing.JTextField txtFimExecao;
    private javax.swing.JTextField txtInicioExecao;
    private javax.swing.JTextPane txtaTerminalExecucao;
    // End of variables declaration//GEN-END:variables
}
